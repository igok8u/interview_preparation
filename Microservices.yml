Microservices
	- API Gateway: включает создание единой точки входа для взаимодействия с различными микросервисами. API Gateway выполняет функции авторизации, аутентификации и маршрутизации запросов.
	- Circuit Breaker: обеспечивает отказоустойчивость при обращении к микросервису, позволяет временно отключить обращения к сервису, который временно не работает или работает с ошибками.
	- Service Registry: сохраняет информацию о зарегистрированных микросервисах, позволяет клиентам найти нужный микросервис.
	- Service Discovery: предоставляет клиентам возможность найти микросервисы, которые они хотят использовать.
	- Event Sourcing: позволяет сохранять все события, которые происходят в системе. Эти события могут быть использованы для восстановления состояния системы в любой момент времени.
	- Command Query Responsibility Segregation (CQRS): отделяет запросы на чтение от запросов на запись. Это позволяет разрабатывать и масштабировать каждую часть системы независимо.
	- Использование контейнеров: позволяет упаковать микросервисы и их зависимости в контейнеры, которые могут быть легко запущены на любой платформе.
	- Использование асинхронных сообщений: позволяет микросервисам общаться друг с другом асинхронно, что уменьшает нагрузку на сеть и повышает отказоустойчивость системы.
	- Использование реактивного программирования: позволяет эффективно обрабатывать асинхронные запросы и управлять потоком данных в системе.
	- Использование декомпозиции на бизнес-сущности: позволяет разбить систему на независимые компоненты, каждый из которых отвечает за определенную функциональность системы. Это повышает гибкость и масштабируемость системы.